name: Integration Tests

on:
    pull_request:
      branches:
        - master

jobs:
  build-and-run:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: docker-compose -f docker-compose.yml up -d

    - name: Wait for services to start
      run: sleep 10

    - name: Install Composer dependencies
      run: composer install

    - name: Create and Add Information to File
      run: |
        echo "DB_HOST=127.0.0.1" > .env
        echo "DB_USER=${{ secrets.MYSQL_USER }}" >> .env
        echo "DB_PASS=${{ secrets.MYSQL_PASSWORD }}" >> .env
        echo "DB_NAME=${{ secrets.MYSQL_DATABASE }}" >> .env
        cat .env

    - name: Import Database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.MYSQL_DATABASE }};"
        mysql -h 127.0.0.1 -P 3306 -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} < sql.sql


    - name: Download Collection From Postman
      run: |
        COLLECTION_UID=30816775-1a3bc6d6-7921-4a45-abd6-31f07e52d0da
        API_KEY=${{ secrets.POSTMAN_API_KEY }}

        curl -X GET \
        "https://api.postman.com/collections/$COLLECTION_UID" \
        -H "Content-Type: application/json" \
        -H "X-Api-Key: $API_KEY" \
        -o collection.json

    - name: Display Collection
      run: cat collection.json

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install -g newman

    - name: Start API server
      run: |
        # Start your API server here
        npm install # Assuming this is how you start your server
        npm start &

    - name: Wait for API server to start
      run: sleep 10 # Adjust the sleep time as needed

    - name: Run Postman Collection
      run: |
        newman run collection.json \
          --env-var "POSTMAN_API_KEY=${{ secrets.POSTMAN_API_KEY }}" \
          --env-var "API_BASE_URL=http://localhost:3000"

    - name: Stop Docker Compose
      run: |
        sudo docker-compose down
